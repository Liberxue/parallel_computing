name: CI

on:
  push:
    # branches: [master]
  pull_request:
  workflow_dispatch:

jobs:
  CI:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04]
        method: [local]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Install CUDA Toolkit
        uses: Jimver/cuda-toolkit@v0.2.14
        if: steps.cache-cuda.outputs.cache-hit != 'true'
        with:
          cuda: "12.3.2"

      # - name: Cache Dependencies
      #   uses: actions/cache@v2
      #   with:
      #     path: |
      #       **/vendor/bundle
      #       !**/vendor/bundle/cache
      #     key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
      #     restore-keys: |
      #       ${{ runner.os }}-gems-

      - name: Install Dependencies
        run: |
          # Add commands to install dependencies here

      - name: Compile CUDA Project
        run: |
          # nvcc -v
